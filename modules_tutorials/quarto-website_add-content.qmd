
Now that you have a live website you can build whatever you'd like! Given the wide range of possibility, we'll only cover how to add a new page but the same process applies to any edit to the living webpage.

To add a new page **create a new Quarto document.** You can do this by going to the "File" menu, entering the "New File" options, and selecting "Quarto Document..."

<p align="center">
<img src="images/tutorial_quarto-website/website-tutorial_new-content-1.png" width = "60%" />
</p>

Similarly to an R markdown file, this will open a new window that lets you enter a title and author as well as decide what format you want to render files to along with some other settings options. **You only need to click the "Create" button** in the bottom right of this dialogue (though you can definitely play with the other options and text boxes as you desire).

<p align="center">
<img src="images/tutorial_quarto-website/website-tutorial_new-content-2.png" width = "75%" />
</p>

After a moment, a new .qmd file will open in Quarto's visual editor. **For the purposes of this tutorial, you only need to add a `title` in the top of the file** but for a real website you can add whatever content sparks joy for you!

<p align="center">
<img src="images/tutorial_quarto-website/website-tutorial_new-content-3.png" width = "75%" />
</p>

**Save that file into your project folder.** Its name can be anything but be sure that you remember what you name it!

<p align="center">
<img src="images/tutorial_quarto-website/website-tutorial_new-content-4.png" width = "60%" />
</p>

**Add the name of the new Quarto document to the .yml file** in the website navbar area (in this example the file is called "more-stuff.qmd").

<p align="center">
<img src="images/tutorial_quarto-website/website-tutorial_new-content-5.png" width = "75%" />
</p>

Once you've added the file to the fundamental architecture of your website, you need to tell Quarto to re-build the part of the website that GitHub looks for when it deploys. To do this **run `quarto render` in the Terminal.**

If you want to *preview* your changes, run `quarto preview` in the Terminal and a new browser window will be displayed showing your current website content. This preview continues until you click the **<span style="color:red">red</span>** stop sign icon in RStudio so be sure to end it when you're done with the preview!

<img src="images/tutorial_quarto-website/website-tutorial_new-content-6.png" width = "100%" />

Regardless, once you've run either `quarto render` or `quarto preview` **you need to stage and commit all changed files indicated in the Git pane of RStudio**. As a reminder, to stage files you check the box next to them, to commit staged files, type an informative message and press the "Commit" button in the right side of the window.

<img src="images/tutorial_quarto-website/website-tutorial_new-content-7.png" width = "100%" />

Switch back to GitHub and you'll see an **<span style="color:orange">amber</span>** dot next to the commit hash just beneath and to the left of the **<span style="color:green">green</span>** "Code" button.

<img src="images/tutorial_quarto-website/website-tutorial_new-content-8.png" width = "100%" />

When the **<span style="color:orange">amber</span>** dot turns into a **<span style="color:green">green</span>** check mark that means that your edits to your website are now included in the live version of your site!

<img src="images/tutorial_quarto-website/website-tutorial_new-content-9.png" width = "100%" />

When you visit your website you may need to refresh the page for your edits to appear but all new visitors will see the updated content when they load the page.

<img src="images/tutorial_quarto-website/website-tutorial_new-content-10.png" width = "100%" />
