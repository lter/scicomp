{
  "hash": "2f56ea2947c31d237f0b2f9caa6e8778",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Portfolio\"\n---\n\n\n## Data Synthesizing\n\nWorking groups have often asked our team to synthesize and wrangle data from various heterogeneous datasets. For example, the [Plant Reproduction working group](https://lternet.edu/working-groups/identifying-environmental-drivers-of-plant-reproduction-across-lter-sites/) had their own plant species data that they compiled from literature and expert knowledge. To get more data, we pulled from the [TRY plant trait database](https://www.try-db.org/TryWeb/Home.php) and wrangled the dataset. After fixing the TRY column headers, values and units, we combined synonymous columns together with the working group's original dataset. We ended up with a comprehensive, tidy dataset that covered over 100 plant species. \n\nIn another example, the [Soil Phosphorus working group](https://lternet.edu/working-groups/soil-p-control-of-c-and-n/) had gathered a bunch of soil nutrient datasets that all had different column headers and units. To combine these datasets together, we standardized the column headers via a data key, which consisted of a spreadsheet connecting the old column names to the new combined column names. Then we were able to synthesize the separate csv files into one master dataset. \n\nData synthesizing remains one of our most popular requests so please do not hesitate to reach out to us if we can help with this task, no matter how big or small. \n\n## Spatial Analyses & Wrangling\n\nOur team has been instrumental in acquiring, wrangling, and summarizing spatial data. For the [Silica Exports working group](https://lternet.edu/working-groups/from-poles-to-tropics-a-multi-biome-synthesis-investigating-the-controls-on-river-si-exports/) we developed a workflow (see [here](https://github.com/lter/lterwg-si-export)) that accomplishes the following tasks:\n\n1. Creates shapefiles that identify the drainage basin linked to several hundred stream gages\n\n2. \"Cookie cuts\" spatial data within those drainage basins (e.g., land cover, lithology, precipitation, etc.)\n\n3. Summarizes that extracted data both as rasters and as data tables for use as explanatory variables in other analyses\n\nWe are comfortable working with such data and can help your team acquire and/or process spatial data if that is of interest!\n\n## Figures for Publication\n\nAdditionally, our team is available to help your group create visualizations for publications! We have generated many figures for the Plant Reproduction working group's paper on mast seeding synchrony using `ggplot`. Please feel free to reach out to us for help on visualizations when your team has reached the writing stage in your project.  \n\n## Project Websites\n\nOur team also helped build [a website](https://lter.github.io/som-website/index.html) for the [Soil Organic Matter (SOM) working group](https://lternet.edu/working-groups/advancing-soil-organic-matter-research/). One of this group's primary products was a synthesized data package containing observed data, modifications of that data, and models based on them. The website operates in part to publicize this data product but also to provide a central location for other resources developed by or important to the SOM group. \n\nFor your group we can (if desired):\n\n- Build a website using [Quarto](https://quarto.org/)\n    - All website content creation can be done via RStudio which your group may already be somewhat familiar with\n    - Quarto also offers a new \"visual editor\" that lets you format text as you would in any word processor (i.e., Microsoft Word, Pages, etc.)\n- Maintain the website **OR** help *you* to maintain it\n    - Quarto is written entirely in \"Markdown syntax\" which makes it easily maintained by either our team or yours depending on your preference\n    - We have also created a [tutorial on making websites with Quarto](https://nceas.github.io/scicomp.github.io/tutorials.html#building-a-website-with-quarto) that you are welcome to explore!\n\n## R Packages\n\n<img src = \"images/scicomptools_hex.png\" align = \"right\" width = \"20%\" />\n\n#### `scicomptools`\n\nWhile much of the work we do is specific to a given working group or task, sometimes we realize afterwards that our functions have the potential to be useful beyond the scope for which they were initially written. To that end, we have created the R package [`scicomptools`](https://github.com/NCEAS/scicomptools#readme)!\n\n##### Package Description\n\nThis package contains a diverse mix of functions for everything from repetitive data wrangling tasks to checking whether you have a token attached for GitHub. In addition, functions that we wrote that are deprecated (usually because their internal workings have been superseded by packages on CRAN) are removed from the package but retained in the GitHub repository in case they are useful to you! **All functions--both live and deprecated--are summarized in the README on the [GitHub repository](https://github.com/NCEAS/scicomptools) so take a look!**\n\n##### Installation Instructions\n\nTo install the package in R, use the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"scicomptools\")\n```\n:::\n\n\n<img src = \"images/HERON_hex.png\" align = \"right\" width = \"17%\" />\n\n#### `HERON`\n\nWhen we've developed enough custom functions for a working group's workflow, we can move those functions into its very own R package! For example, we've created a package for the Silica Exports working group called `HERON` (\"HElpers for River ObservatioN\"). \n\n##### Package Description\n\nThis package contains several helper functions that are integral to the group's workflow, which includes identifying inflection points (i.e., hills & valleys) in trendlines and running separate regressions on each chunk of the line between such points. `HERON` is meant to be used for workflows involving the `EGRET` and `SiZer` R packages.\n\n##### Installation Instructions\n\nTo install the package in R, use the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"devtools\")\ndevtools::install_github(\"lter/HERON\")\n```\n:::\n\n\n## R Shiny Apps\n\n<img src = \"images/lterpalettefinder_hex.png\" align = \"right\" width = \"17%\" />\n\nOur team created another R package--`lterpalettefinder`--to extract color palettes from user-supplied photos. To help non-R users still explore this package and have fun pulling color palettes from photos, we created [this standalone Shiny app](https://cosima.nceas.ucsb.edu/lterpalettefinder-shiny/). This app lets anyone interact with `lterpalettefinder` via their browser with no R experience required!\n\nWe have also built apps to help working groups visualize data or present survey results in an interactive, visually-appealing format. Shiny apps can also include useful 'overview' portions that serve as an excellent landing page for third parties to your group's activities!\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}